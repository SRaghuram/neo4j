// automatically generated by the FlatBuffers compiler, do not modify

package org.neo4j.internal.freki.generated;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Property extends Table {
  public static Property getRootAsProperty(ByteBuffer _bb) { return getRootAsProperty(_bb, new Property()); }
  public static Property getRootAsProperty(ByteBuffer _bb, Property obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Property __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int key() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public PropertyValue value() { return value(new PropertyValue()); }
  public PropertyValue value(PropertyValue obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createProperty(FlatBufferBuilder builder,
      int key,
      int valueOffset) {
    builder.startObject(2);
    Property.addValue(builder, valueOffset);
    Property.addKey(builder, key);
    return Property.endProperty(builder);
  }

  public static void startProperty(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addKey(FlatBufferBuilder builder, int key) { builder.addInt(0, key, 0); }
  public static void addValue(FlatBufferBuilder builder, int valueOffset) { builder.addOffset(1, valueOffset, 0); }
  public static int endProperty(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

