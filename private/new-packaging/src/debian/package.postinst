#!/bin/sh
# postinst script for neo4j
# Based on jenkins install script
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        [ -r /etc/default/neo4j ] && . /etc/default/neo4j
        : ${NEO_USER:=neo4j}

        # Create neo4j user if it doesn't exist.
        if ! id neo4j > /dev/null 2>&1 ; then
            useradd --system --user-group --home /var/lib/neo4j --shell /bin/bash neo4j
        else
            # Make sure a neo4j group exists in case user is upgrading
            # from older version where no such group was created
            groupadd --system --force neo4j
            # Make sure neo4j user's primary group is neo4j
            usermod --gid neo4j neo4j > /dev/null 2>&1
        fi

        # directories needed for neo4j
        chown -R $NEO_USER:adm /var/lib/neo4j /var/log/neo4j /etc/neo4j /usr/share/neo4j
        chmod u+rwx /var/lib/neo4j /var/log/neo4j /etc/neo4j /usr/share/neo4j

        if [ -f /etc/neo4j/neo4j-wrapper.conf ]; then
            echo >> /etc/neo4j/neo4j.conf
            cat /etc/neo4j/neo4j-wrapper.conf >> /etc/neo4j/neo4j.conf
            rm /etc/neo4j/neo4j-wrapper.conf
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
