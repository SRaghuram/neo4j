Feature "Merge1 - Merge node": Scenario "Merge should be able to merge using property of bound node"
Feature "Merge1 - Merge node": Scenario "Merges should not be able to match on deleted nodes"
Feature "Merge2 - Merge node - on create": Scenario "Merge should be able to use properties of bound node in ON CREATE"
Feature "Merge3 - Merge node - on match": Scenario "Merge should be able to use properties of bound node in ON MATCH"
Feature "Merge4 - Merge node - on match and on create": Scenario "Merge should be able to set labels on match and on create"
Feature "Merge4 - Merge node - on match and on create": Scenario "Merge should be able to use properties of bound node in ON MATCH and ON CREATE"
Feature "Merge5 - Merge relationships": Scenario "Do not match on deleted entities"
Feature "Merge9 - Merge clause interoperation with other clauses": Scenario "UNWIND with multiple MERGE"

// TCK needs to be updated, expects wrong error type or message
Feature "List1 - Dynamic Element Access": Scenario "Fail at runtime when trying to index into a list with a list"
Feature "List1 - Dynamic Element Access": Scenario "Fail at compile time when attempting to index with a non-integer into a list"

//Semantics change not yet visible on 4.3 branch, cf. CLG discussion https://trello.com/c/AwDT6275/289-not-on-lists
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "8"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "9"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "10"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "11"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "12"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "13"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "14"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "15"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "16"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "17"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "18"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "19"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "20"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "21"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "22"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "23"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "24"

//Semantics change not yet visible on 4.3 branch, cf. CLG discussion https://trello.com/c/2BDn37Qf/291-range-function-in-negative-steps
Feature "List11 - Create a list from a range": Scenario "Create an empty list if range direction and step direction are inconsistent"
Feature "List11 - Create a list from a range": Scenario "Create list from `range()` with explicitly given step": Example "10"

//Semantics change not yet visible on 4.3 branch, cf. CLG discussion https://trello.com/c/BaAr9vLI/304-null-valued-map-entries
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "2"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "3"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "4"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "5"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "6"

