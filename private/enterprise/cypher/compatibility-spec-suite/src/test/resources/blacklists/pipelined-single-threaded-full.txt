Feature "Merge1 - Merge node": Scenario "Merge should be able to merge using property of bound node"
Feature "Merge1 - Merge node": Scenario "Merges should not be able to match on deleted nodes"
Feature "Merge2 - Merge node - on create": Scenario "Merge should be able to use properties of bound node in ON CREATE"
Feature "Merge3 - Merge node - on match": Scenario "Merge should be able to use properties of bound node in ON MATCH"
Feature "Merge4 - Merge node - on match and on create": Scenario "Merge should be able to set labels on match and on create"
Feature "Merge4 - Merge node - on match and on create": Scenario "Merge should be able to use properties of bound node in ON MATCH and ON CREATE"
Feature "Merge5 - Merge relationships": Scenario "Do not match on deleted entities"
Feature "Merge9 - Merge clause interoperation with other clauses": Scenario "UNWIND with multiple MERGE"
Feature "AggregationAcceptance": Scenario "Projection during aggregation in WITH before MERGE and after WITH with predicate"
Feature "CreateAcceptance": Scenario "A bound node should be recognized after projection with WITH + MERGE pattern"
Feature "CreateAcceptance": Scenario "A bound node should be recognized after projection with WITH + MERGE node"
Feature "MatchAcceptance2": Scenario "Counting rows after MATCH, MERGE, OPTIONAL MATCH"
Feature "MergeIntoAcceptance": Scenario "Copying properties from literal map with ON CREATE"
Feature "MergeIntoAcceptance": Scenario "Copying properties from literal map with ON MATCH"
Feature "MergeIntoAcceptance": Scenario "Copying properties from node with ON CREATE"
Feature "MergeIntoAcceptance": Scenario "Copying properties from node with ON MATCH"
Feature "MergeIntoAcceptance": Scenario "Null-setting one property with ON CREATE"
Feature "MergeIntoAcceptance": Scenario "Updating one property with ON CREATE"
Feature "MergeNodeAcceptance": Scenario "Merge followed by multiple creates"
Feature "MergeNodeAcceptance": Scenario "Merge must properly handle multiple labels"
Feature "MergeNodeAcceptance": Scenario "Merge node and set property on match"
Feature "MergeNodeAcceptance": Scenario "Merge node should create when it doesn't match, properties and label"
Feature "MergeNodeAcceptance": Scenario "Merge node should create when it doesn't match, properties"
Feature "MergeNodeAcceptance": Scenario "Merge node when no nodes exist"
Feature "MergeNodeAcceptance": Scenario "Merge node with label add label on create"
Feature "MergeNodeAcceptance": Scenario "Merge node with label add label on match when it exists"
Feature "MergeNodeAcceptance": Scenario "Merge node with label add property on create"
Feature "MergeNodeAcceptance": Scenario "Merge node with label add property on update when it exists"
Feature "MergeNodeAcceptance": Scenario "Merge node with label when it exists"
Feature "MergeNodeAcceptance": Scenario "Merge node with label"
Feature "MergeNodeAcceptance": Scenario "Merge node with prop and label"
Feature "MergeNodeAcceptance": Scenario "Merges should not be able to match on deleted nodes"
Feature "MergeNodeAcceptance": Scenario "ON CREATE on created nodes"
Feature "MergeNodeAcceptance": Scenario "Should be able to merge using property from match"
Feature "MergeNodeAcceptance": Scenario "Should be able to set labels on match and on create"
Feature "MergeNodeAcceptance": Scenario "Should be able to set labels on match"
Feature "MergeNodeAcceptance": Scenario "Should be able to use properties from match in ON CREATE"
Feature "MergeNodeAcceptance": Scenario "Should be able to use properties from match in ON MATCH and ON CREATE"
Feature "MergeNodeAcceptance": Scenario "Should be able to use properties from match in ON MATCH"
Feature "MergeNodeAcceptance": Scenario "Should handle argument properly"
Feature "MergeNodeAcceptance": Scenario "Should handle arguments properly with only write clauses"
Feature "MergeNodeAcceptance": Scenario "Should support updates while merging"
Feature "MergeNodeAcceptance": Scenario "Should work when finding multiple elements"
Feature "MergeNodeAcceptance": Scenario "Unwind combined with merge"
Feature "MergeRelationshipAcceptance": Scenario "Aliasing of existing nodes 1"
Feature "MergeRelationshipAcceptance": Scenario "Aliasing of existing nodes 2"
Feature "MergeRelationshipAcceptance": Scenario "Creating a relationship"
Feature "MergeRelationshipAcceptance": Scenario "Creating relationship using merged nodes"
Feature "MergeRelationshipAcceptance": Scenario "Creating relationship when all matches filtered out"
Feature "MergeRelationshipAcceptance": Scenario "Creating relationship with property"
Feature "MergeRelationshipAcceptance": Scenario "Do not match on deleted entities"
Feature "MergeRelationshipAcceptance": Scenario "Do not match on deleted relationships"
Feature "MergeRelationshipAcceptance": Scenario "Double aliasing of existing nodes 1"
Feature "MergeRelationshipAcceptance": Scenario "Double aliasing of existing nodes 2"
Feature "MergeRelationshipAcceptance": Scenario "Filtering relationships"
Feature "MergeRelationshipAcceptance": Scenario "Introduce named paths 1"
Feature "MergeRelationshipAcceptance": Scenario "Introduce named paths 2"
Feature "MergeRelationshipAcceptance": Scenario "Match both incoming and outgoing relationships when direction unspecified"
Feature "MergeRelationshipAcceptance": Scenario "Match outgoing relationship when direction unspecified"
Feature "MergeRelationshipAcceptance": Scenario "Matching a relationship"
Feature "MergeRelationshipAcceptance": Scenario "Matching incoming relationship"
Feature "MergeRelationshipAcceptance": Scenario "Matching two relationships"
Feature "MergeRelationshipAcceptance": Scenario "Matching using list property"
Feature "MergeRelationshipAcceptance": Scenario "Mixing MERGE with CREATE"
Feature "MergeRelationshipAcceptance": Scenario "UNWIND with multiple merges"
Feature "MergeRelationshipAcceptance": Scenario "Use outgoing direction when unspecified"
Feature "MergeRelationshipAcceptance": Scenario "Using ON CREATE and ON MATCH"
Feature "MergeRelationshipAcceptance": Scenario "Using ON CREATE on a node"
Feature "MergeRelationshipAcceptance": Scenario "Using ON CREATE on a relationship"
Feature "MergeRelationshipAcceptance": Scenario "Using ON MATCH on a relationship"
Feature "MergeRelationshipAcceptance": Scenario "Using ON MATCH on created node"
Feature "MergeRelationshipAcceptance": Scenario "Using ON MATCH on created relationship"
Feature "MergeRelationshipAcceptance": Scenario "Using bound variables from other updating clause"
Feature "MergeRelationshipAcceptance": Scenario "Using list properties via variable"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing on merging node with null property"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing on merging relationship with null property"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when setting a list of maps as a property"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure that takes no arguments and yields no results"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure with argument of type INTEGER accepts value of type FLOAT"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure with explicit arguments that drops all result fields"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure with argument of type INTEGER accepts value of type FLOAT"
Feature "UnwindAcceptance": Scenario "Creating nodes from an unwound parameter list"
Feature "UnwindAcceptance": Scenario "Unwind with merge"

// TCK needs to be updated, expects wrong error type or message
Feature "List1 - Dynamic Element Access": Scenario "Fail at runtime when trying to index into a list with a list"
Feature "List1 - Dynamic Element Access": Scenario "Fail at compile time when attempting to index with a non-integer into a list"

//Semantics change not yet visible on 4.3 branch, cf. CLG discussion https://trello.com/c/AwDT6275/289-not-on-lists
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "8"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "9"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "10"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "11"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "12"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "13"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "14"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "15"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "16"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "17"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "18"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "19"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "20"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "21"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "22"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "23"
Feature "Boolean4 - NOT logical operations": Scenario "Fail when using NOT on a non-boolean literal": Example "24"

//Semantics change not yet visible on 4.3 branch, cf. CLG discussion https://trello.com/c/2BDn37Qf/291-range-function-in-negative-steps
Feature "List11 - Create a list from a range": Scenario "Create an empty list if range direction and step direction are inconsistent"
Feature "List11 - Create a list from a range": Scenario "Create list from `range()` with explicitly given step": Example "10"

//Semantics change not yet visible on 4.3 branch, cf. CLG discussion https://trello.com/c/BaAr9vLI/304-null-valued-map-entries
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "2"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "3"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "4"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "5"
Feature "Map4 - Field existence check": Scenario "`exists()` with literal maps": Example "6"

